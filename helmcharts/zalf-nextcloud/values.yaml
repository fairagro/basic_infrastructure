# oidc_login_provider_url: "https://keycloak.corki.bonares.de/realms/fairagro"
# #oidc_login_logout_url: "https://keycloak.corki.bonares.de/realms/fairagro/protocol/openid-connect/logout"
# oidc_login_logout_url: "https://nextcloud.corki.bonares.de/login"
# oidc_login_client_secret: "eoqeT1vQfBDoEDOEMEkRKul6BAF4aYSN"
oidc_login_client_id: nextcloud

# This is the collabora IP, possibly the external reverse proxy
allowed_collabora_ips: ~
# This should be set yo the 'kube_pods_subnet' variable in the kubespray group_vars file 'k8s-cluster.yml'.
allowed_reverse_proxy_ips: ~

postgres_db:
  size: 4Gi
  storageClass: ~

# ## Liveness and readiness probe values
# ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
# ##
nextcloud:
  image:
    # Here we're actually using a hack:
    # The nextcloud helm chart does not support specifying an image digest hash. So we rely on the fact
    # that the image name is built by concatenating the repository name and the tag, using a colon as separator.
    # Now we can simply add the @sha256 to the repository name and specify the image digest hash in the tag.
    # This works as long as the repository name is only referenced within the chart for generating the image name.
    repository: nextcloud@sha256
    favor: fpm
    # I would prefer to go for the fpm-alpine version, because it has much less vulnerabilities.
    # This requires to install nginx as sidecar container. But currently I receive HTTP 500 when trying this.
    #tag: 0b04a2e2c14672a2fe56ca668a633ed8fc9d2d882df83fdfc6114773f4713a74 # 28.0.2-apache
    tag: d0d13d935eaa9219bfa89fd8213b3ede6431e04685f0a25f6f764f5e5dcfe990 # 28.0.2-fpm-alpine
    pullPolicy: IfNotPresent

  # nextcloud is burstable
  resources:
    requests:
      cpu: '2'
      memory: 6Gi
    limits:
      cpu: '4'
      memory: 8Gi

  ingress:
    enabled: true
    className: nginx-external
    annotations:
      cert-manager.io/issuer: geant
      cert-manager.io/private-key-size: "4096"
      cert-manager.io/private-key-rotation-policy: "Always"
      # It seems the subjects annotation do not have any effect.
      # Still we keep them...
      cert-manager.io/subject-countries: "DE"
      cert-manager.io/subject-organizations: "NFDI FAIRagro"
      cert-manager.io/subject-organizationalunits: "Measure 4.1"
      nginx.ingress.kubernetes.io/proxy-body-size: 128m
      nginx.ingress.kubernetes.io/cors-allow-headers: X-Forwarded-For
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/server-snippet: |-
        server_tokens off;
        proxy_hide_header X-Powered-By;
        rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
        rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
        rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
        rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
        location = /.well-known/carddav {
          return 301 $scheme://$host/remote.php/dav;
        }
        location = /.well-known/caldav {
          return 301 $scheme://$host/remote.php/dav;
        }
        location = /robots.txt {
          allow all;
          log_not_found off;
          access_log off;
        }
        location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
          deny all;
        }
        location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
          deny all;
        }
    labels:
      app: nextcloud
    path: /
    pathType: Prefix

  nextcloud:
    datadir: /nextcloud_data
    containerPort: 8080

    podSecurityContext:
      fsGroup: 82
      fsGroupChangePolicy: OnRootMismatch

    securityContext:
      runAsUser: 82
      runAsGroup: 82
      runAsNonRoot: true
      readOnlyRootFilesystem: false
      allowPrivilegeEscalation: false
      privileged: false
      # capabilities:
      #   add:
      #     - CAP_SETUID
      #   drop:
      #     - ALL

    extraEnv:
      # Fix the postgres connection issue
      # "could not open certificate file "/root/.postgresql/postgresql.crt": Permission denied"
      # according to https://meta.discourse.org/t/trouble-bootstrapping-with-rds-could-not-open-certificate-file/289367
      - name: PGSSLCERT
        value: /tmp/postgresql.crt

    extraVolumeMounts:
      # Script to install additional apps and configure nextcloud
      - name: installation-scripts
        mountPath: /docker-entrypoint-hooks.d/post-installation/post-installation.sh
        readOnly: true
        subPath: post-installation.sh
      # Wait until the postgres database is available, otherwise nextcloud setup will fail
      - name: installation-scripts
        mountPath: /docker-entrypoint-hooks.d/pre-installation/wait-for-postgresql.sh
        readOnly: true
        subPath: wait-for-postgresql.sh
      # Some additional templated config files
      - name: additional-config
        mountPath: /var/www/html/config/proxy.config.php
        subPath: proxy.config.php
      - name: additional-config
        mountPath: /usr/local/etc/php/conf.d/redis-session.ini
        subPath: redis-session.ini
      - name: additional-config
        mountPath: /usr/local/etc/php-fpm.d/www.conf
        subPath: www.conf  # replace default www.conf, refer to https://tideways.com/profiler/blog/an-introduction-to-php-fpm-tuning
    extraVolumes:
      - name: installation-scripts
        configMap:
          defaultMode: 0750
          name: nextcloud-installation-scripts
      - name: additional-config
        configMap:
          name: nextcloud-additional-config

    mail:
      enabled: true
      smtp:
        host: smtp.hostinger.com
        secure: starttls
        port: 587
        authtype: LOGIN

    configs:
      # Some additional non-templated config files
      misc.config.php: |
        <?php
        $CONFIG = array (
          'default_phone_region' => 'DE',
          'overwriteprotocol' => 'https',
          'check_data_directory_permissions' => false,
        );
      cron.config.php: |
        <?php
        $CONFIG = array (
          'maintenance_window_start' => 1,     // run background jobs at 1am
        );

  livenessProbe:
    enabled: true
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    enabled: true
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  startupProbe: # the entrypoint copies 600MB data to the NFS volumes which may take some time
    enabled: true
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 300
    successThreshold: 1

  # ## Enable persistence using Persistent Volume Claims
  # ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  # ##
  persistence:
    # #   # Nextcloud Data (/var/www/html)
    enabled: true
    # we setup an additional volume for the nextcloud data according to the hardening guide:
    # https://docs.nextcloud.com/server/28/admin_manual/installation/harden_server.html
    # NOTE: I did not succeed to set the required permissions 0770 for the additional nextcloud
    # data mount. So I disabled it for now.
    nextcloudData:
      enabled: true

  nginx:
    enabled: true
    image:
      repository: nginxinc/nginx-unprivileged@sha256
      # tag: cb0953165f59b5cf2227ae979a49a2284956d997fad4ed7a338eebc6aef3e70b # 1.25.4-alpine2.18
      tag: a2e2a031969b6fc6107537901a04c354b38e1708ba3a5e1042b390277b55780e # 1.25.4-bookworm -- there are no alpine versions of unprivileged nginx images
      pullPolicy: IfNotPresent
    # nginx is burstable
    resources:
      requests:
        cpu: 100m
        memory: 200Mi
      limits:
        cpu: '2'
        memory: 1Gi
    containerPort: 8080
    config:
      default: true
      custom: |-
        types {
          text/javascript mjs;
        }

  internalDatabase:
    enabled: false

  externalDatabase:
    enabled: true
    type: postgresql
    host: fairagro-postgresql-nextcloud
    database: nextcloud
    existingSecret:
      enabled: true
      secretName: nextcloud.fairagro-postgresql-nextcloud.credentials.postgresql.acid.zalan.do
      usernameKey: username
      passwordKey: password

  cronjob:
    enabled: true
    # the cronjob container is burstable
    resources:
      requests:
        cpu: 100m
        memory: 50M
      limits:
        cpu: '1'
        memory: 1G
      # Cron runs with root permissions (the default for the nextcloud image that is used for cron).
      # Root permissions are needed by cron.
      # securityContext: {}

  redis:
    enabled: true
    image:
      registry: docker.io
      repository: bitnami/redis # bitnami redis as this is what the nextcloud helm chart uses by default
      digest: sha256:413ba6ab7104ced40c1047451680f0679b235684a14a7db4a05a5990ff4e1e67 # 7.2.4-debian-12-r9
    auth:
      enabled: true
      password: ~
    architecture: standalone
    master:
      # redis is guaranteed
      resources:
        requests:
          cpu: '1'
          memory: 1G
        limits:
          cpu: '1'
          memory: 1G
      persistence:
        enabled: false

#################################
### Collabora Online Settings ###
#################################
collabora-online:

  replicaCount: 2

  image:
    repository: collabora/code@sha256
    tag: e0c7ff3cf4ccd49a590980cf83f46f8efd9456f9d173f92d1acfd3f41be09319 # 23.05.9.1.1
    pullPolicy: IfNotPresent

  autoscaling:
    enabled: false

  securityContext:
    privileged: true
    # capabilities:
    #   add:
    #     - CHROOT
    #     - MKNOD

  collabora:
    aliasgroups:
      - host: ~
    extra_params: --o:ssl.enable=false --o:ssl.termination=true
    server_name: ~

  # collabora is burstable
  resources:
    requests:
      cpu: '4'
      memory: 6Gi
    limits:
      cpu: '8'
      memory: 8Gi

  ingress:
    enabled: true
    className: nginx-external
    annotations:
      cert-manager.io/issuer: geant
      cert-manager.io/private-key-size: "4096"
      cert-manager.io/private-key-rotation-policy: "Always"
      # It seems the subjects annotation do not have any effect.
      # Still we keep them...
      cert-manager.io/subject-countries: "DE"
      cert-manager.io/subject-organizations: "NFDI FAIRagro"
      cert-manager.io/subject-organizationalunits: "Measure 4.1"
      nginx.ingress.kubernetes.io/upstream-hash-by: "$arg_WOPISrc"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
      # block admin urls from outside
      nginx.ingress.kubernetes.io/server-snippet: |
        location /cool/getMetrics { deny all; return 403; }
        location /cool/adminws/ { deny all; return 403; }
        location /browser/dist/admin/admin.html { deny all; return 403; }
    hosts: ~
    tls: ~
